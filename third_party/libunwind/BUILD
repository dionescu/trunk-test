licenses(["notice"])

cc_library(
  name = "source_includes",
  hdrs = ["upstream/src/elfxx.c"],
)

filegroup(
  name = "private_headers",
  srcs = [
    "upstream/src/x86_64/init.h",
    "upstream/src/x86_64/offsets.h",
    "upstream/src/x86_64/ucontext_i.h",
    "upstream/src/x86_64/unwind_i.h",
    "upstream/src/elf64.h",
    "upstream/src/elfxx.h",
    "upstream/src/os-linux.h",
    "upstream/include/compiler.h",
    "upstream/include/config.h",
    "upstream/include/dwarf_i.h",
    "upstream/include/dwarf-eh.h",
    "upstream/include/dwarf.h",
    "upstream/include/libunwind-dynamic.h",
    "upstream/include/libunwind-common.h",
    "upstream/include/libunwind-x86_64.h",
    "upstream/include/libunwind_i.h",
    "upstream/include/mempool.h",
    "upstream/include/remote.h",
    "upstream/include/tdep/libunwind_i.h",
    "upstream/include/tdep/dwarf-config.h",
    "upstream/include/tdep-x86_64/dwarf-config.h",
    "upstream/include/tdep-x86_64/libunwind_i.h",
  ],
)

cc_library(
  name = "libunwind-k8",
  visibility = ["//visibility:public"],
  deps = [":source_includes"],
  srcs = [
    ":private_headers",
    "upstream/src/dwarf/Gexpr.c",
    "upstream/src/dwarf/Gfde.c",
    "upstream/src/dwarf/Gfind_proc_info-lsb.c",
    "upstream/src/dwarf/Gfind_unwind_table.c",
    "upstream/src/dwarf/global.c",
    "upstream/src/dwarf/Gparser.c",
    "upstream/src/dwarf/Gpe.c",
    "upstream/src/dwarf/Gstep.c",
    "upstream/src/elf64.c",
    "upstream/src/mi/backtrace.c",
    "upstream/src/mi/dyn-cancel.c",
    "upstream/src/mi/dyn-info-list.c",
    "upstream/src/mi/dyn-register.c",
    "upstream/src/mi/flush_cache.c",
    "upstream/src/mi/Gdestroy_addr_space.c",
    "upstream/src/mi/Gdyn-extract.c",
    "upstream/src/mi/Gfind_dynamic_proc_info.c",
    "upstream/src/mi/Gget_accessors.c",
    "upstream/src/mi/Gget_fpreg.c",
    "upstream/src/mi/Gget_proc_info_by_ip.c",
    "upstream/src/mi/Gget_proc_name.c",
    "upstream/src/mi/Gget_reg.c",
    "upstream/src/mi/Gput_dynamic_unwind_info.c",
    "upstream/src/mi/Gset_caching_policy.c",
    "upstream/src/mi/Gset_fpreg.c",
    "upstream/src/mi/Gset_reg.c",
    "upstream/src/mi/init.c",
    "upstream/src/mi/mempool.c",
    "upstream/src/mi/strerror.c",
    "upstream/src/os-linux.c",
    "upstream/src/x86_64/Gcreate_addr_space.c",
    "upstream/src/x86_64/getcontext.S",
    "upstream/src/x86_64/Gget_proc_info.c",
    "upstream/src/x86_64/Gget_save_loc.c",
    "upstream/src/x86_64/Gglobal.c",
    "upstream/src/x86_64/Ginit_local.c",
    "upstream/src/x86_64/Ginit.c",
    "upstream/src/x86_64/Ginit_remote.c",
    "upstream/src/x86_64/Gos-linux.c",
    "upstream/src/x86_64/Gregs.c",
    "upstream/src/x86_64/Gtrace.c",
    "upstream/src/x86_64/Gresume.c",
    "upstream/src/x86_64/Gstash_frame.c",
    "upstream/src/x86_64/Gstep.c",
    "upstream/src/x86_64/is_fpreg.c",
    "upstream/src/x86_64/regname.c",
    "upstream/src/x86_64/setcontext.S",
  ],
  hdrs = [
    "upstream/include/libunwind.h",
  ],
  copts = [
    "-fno-sanitize=thread",
    "-fno-sanitize=address",
    "-Wno-error",
    '-DHAVE_CONFIG_H',
    '-D_GNU_SOURCE',
    '-DUNW_LOCAL_ONLY',
    "-Ithird_party/libunwind/upstream/src",
    "-Ithird_party/libunwind/upstream/src/x86_64",
    "-Ithird_party/libunwind/upstream/include",
    "-Ithird_party/libunwind/upstream/include/tdep",
    "-O3",
  ]
)
